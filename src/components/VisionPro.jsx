/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: shettymithesh4 (https://sketchfab.com/shettymithesh4)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/apple-vision-pro-3d-model-a6b70a6228754a6fa9d28c08cc0f0beb
Title: Apple Vision pro 3d model
*/

import React, { useRef } from 'react'
import { useGLTF, useTexture } from '@react-three/drei'
import * as THREE from 'three'
import { useEffect } from 'react'

function Model(props) {
  const { nodes, materials } = useGLTF('/models/scene.glb')

  const texture = useTexture(props.item.img)

  useEffect(() => {
    Object.entries(materials).map((material) => {
      // these are the material names that can't be changed color
      if (
        material[0] !== "zFdeDaGNRwzccye" &&
        material[0] !== "ujsvqBWRMnqdwPx" &&
        material[0] !== "hUlRcbieVuIiOXG" &&
        material[0] !== "jlzuBkUzuJqgiAK" &&
        material[0] !== "xNrofRCqOXXHVZt"
      ) {
        material[1].color = new THREE.Color(props.item.color[0]);
      }
      material[1].needsUpdate = true;
    });
  }, [materials, props.item]);
  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Object_4.geometry}
        material={materials.PaletteMaterial001}
        position={[0.696, 1.922, -0.183]}
        rotation={[0, 1.538, 0]}
        scale={[1, 1, 0.374]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Object_51.geometry}
        material={materials['Material.001']}
        position={[0.89, 1.378, -0.167]}
        rotation={[0, 1.53, 0]}
        scale={[0.933, 0.871, 0.325]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Object_100.geometry}
        material={materials.PaletteMaterial002}
        position={[0.494, 1.376, -0.186]}
        rotation={[0, 1.538, 0]}
        scale={[1, 1.158, 0.374]}
      />
    </group>
  )
}
export default Model;
useGLTF.preload('/models/scene.glb')
